{"is_source_file": true, "format": "Python", "description": "This file defines API routes related to user authentication, including registration, login, password reset, and logout, using FastAPI. It includes route handlers that interact with an async database session, perform user validation, and generate JWT tokens.", "external_files": ["app.core.config", "app.core.security", "app.db.session", "app.models.user", "app.schemas.auth", "app.schemas.user"], "external_methods": ["get_password_hash", "verify_password", "create_access_token", "get_session"], "published": ["register", "login", "reset_password", "logout"], "classes": [], "methods": [{"name": "UserRead register(payload: RegisterRequest, session: AsyncSession = Depends(get_session))", "description": "Handles user registration by creating a new user in the database after validating that the email isn't already registered.", "scope": "", "scopeKind": ""}, {"name": "TokenResponse login(payload: LoginRequest, session: AsyncSession = Depends(get_session))", "description": "Handles user authentication by verifying credentials and returning a JWT token with expiration details.", "scope": "", "scopeKind": ""}, {"name": "dict reset_password(payload: PasswordResetRequest)", "description": "Placeholder endpoint to initiate password reset process, currently returns a confirmation message.", "scope": "", "scopeKind": ""}, {"name": "None logout()", "description": "Placeholder endpoint for logging out users, which is a stateless JWT operation returning HTTP 204.", "scope": "", "scopeKind": ""}], "calls": ["session.execute", "session.add", "session.commit", "session.refresh", "create_access_token", "get_password_hash", "verify_password"], "search-terms": ["FastAPI auth routes", "JWT token generation", "AsyncSession user registration", "password reset endpoint", "stateless JWT logout"], "state": 2, "file_id": 6, "knowledge_revision": 13, "git_revision": "", "ctags": [{"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/auth.py", "pattern": "/^async def login(payload: LoginRequest, session: AsyncSession = Depends(get_session)) -> TokenRes/", "language": "Python", "typeref": "typename:TokenResponse", "kind": "function", "signature": "(payload: LoginRequest, session: AsyncSession = Depends(get_session))"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/auth.py", "pattern": "/^async def logout() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/auth.py", "pattern": "/^async def register(payload: RegisterRequest, session: AsyncSession = Depends(get_session)) -> Us/", "language": "Python", "typeref": "typename:UserRead", "kind": "function", "signature": "(payload: RegisterRequest, session: AsyncSession = Depends(get_session))"}, {"_type": "tag", "name": "reset_password", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/auth.py", "pattern": "/^async def reset_password(payload: PasswordResetRequest) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(payload: PasswordResetRequest)"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/auth.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}], "hash": "fc8040e3787a9f77da141920f6a7fdc3", "format-version": 4, "code-base-name": "BackendAPIContainer", "filename": "BackendAPIContainer/src/app/api/routes/auth.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"13": ""}]}