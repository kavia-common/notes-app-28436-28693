{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing notes in a note-taking application, including listing, creating, retrieving, updating, deleting, summarizing notes, and retrieving summaries. It utilizes FastAPI for defining HTTP endpoints, SQLAlchemy for database interactions, and relies on dependency injection for session and user authentication.", "external_files": ["app.core.security", "app.db.session", "app.models.note", "app.models.summary", "app.schemas.note", "app.schemas.summary", "app.services.summarization_client"], "external_methods": ["get_current_user", "get_session", "Note.model_validate", "SummaryRead.model_validate", "SummarizationClient.summarize"], "published": ["list_notes", "create_note", "get_note", "update_note", "delete_note", "get_note_summary", "summarize_note"], "classes": [], "methods": [{"name": "List[NoteRead] list_notes( session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )", "description": "Lists all notes belonging to the authenticated user, ordered by creation date descending.", "scope": "", "scopeKind": ""}, {"name": "NoteRead create_note( payload: NoteCreate, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )", "description": "Creates a new note for the current user with provided title and content.", "scope": "", "scopeKind": ""}, {"name": "NoteRead get_note( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )", "description": "Retrieves a specific note by ID if it is owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "NoteRead update_note( id: int, payload: NoteUpdate, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )", "description": "Updates the title and content of a note owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "None delete_note( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )", "description": "Deletes a note owned by the current user.", "scope": "", "scopeKind": ""}, {"name": "SummaryRead get_note_summary( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )", "description": "Fetches the stored summary for a specific note.", "scope": "", "scopeKind": ""}, {"name": "dict summarize_note( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )", "description": "Triggers AI to generate a summary for a note and stores the result.", "scope": "", "scopeKind": ""}], "calls": ["session.execute", "Note.model_validate", "SummaryRead.model_validate", "SummarizationClient.summarize", "session.add", "session.commit", "session.refresh", "session.delete"], "search-terms": ["notes API", "note CRUD endpoints", "note summarization", "FastAPI notes routes", "SQLAlchemy async session", "notes authentication"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^async def create_note($/", "language": "Python", "typeref": "typename:NoteRead", "kind": "function", "signature": "( payload: NoteCreate, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^async def delete_note($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^async def get_note($/", "language": "Python", "typeref": "typename:NoteRead", "kind": "function", "signature": "( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )"}, {"_type": "tag", "name": "get_note_summary", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^async def get_note_summary($/", "language": "Python", "typeref": "typename:SummaryRead", "kind": "function", "signature": "( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^async def list_notes($/", "language": "Python", "typeref": "typename:List[NoteRead]", "kind": "function", "signature": "( session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "summarize_note", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^async def summarize_note($/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "( id: int, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/notes-app-28436-28693/BackendAPIContainer/src/app/api/routes/notes.py", "pattern": "/^async def update_note($/", "language": "Python", "typeref": "typename:NoteRead", "kind": "function", "signature": "( id: int, payload: NoteUpdate, session: AsyncSession = Depends(get_session), user=Depends(get_current_user), )"}], "hash": "f8b9e8b59e592b45d109e1f713719fc5", "format-version": 4, "code-base-name": "BackendAPIContainer", "filename": "BackendAPIContainer/src/app/api/routes/notes.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}